model:
  type: "nano"
  num_classes: 2

datasets:
  class_to_id: {"head": 0, "person":1}
  info:
    - 
      name: "coco"
      train_image_directory: "datasets/coco/images/train2017"
      train_annotation_path: "datasets/coco/annotations/instances_train2017_v2.json"
      val_image_directory: "datasets/coco/images/val2017"
      val_annotation_path: "datasets/coco/annotations/instances_val2017_v2.json"
      delete_iscrowd_image: True # iscrowd: Whether the image contains multiple objects
    -
      name: "custom"
      dataset_directory: "datasets/custom_dataset"
      
  num_workers: 4
  input_height: 480
  input_width: 640
  mosaic: 1.0 # image mosaic (probability)
  mix_up: 1.0 # image mix-up (probability)
  flip_ud: 0.5 # image flip up-down (probability)
  flip_lr: 0.5 # image flip left-right (probability)
  hsv_h: 0.015 # image HSV-Hue augmentation (fraction)
  hsv_s: 0.7 # image HSV-Saturation augmentation (fraction)
  hsv_v: 0.4 # image HSV-Value augmentation (fraction)

training:
  seed: 42
  total_epochs: 300
  batch_size: 64
  use_ema: true
  optimizer: "adam" # sgd or adam
  use_scheduler: true

  scheduler: "cosine" # cosine or linear
  min_lr: 0.0001 # initial learning rate
  max_lr: 0.01 # maximum learning rate
  warmup_epochs: 5 # warmup epochs (only use scheduler)

  save_dir: "./outputs"

  # only sgd optimizer
  momentum: 0.937 # sgd momentum
  weight_decay: 0.0005 # sgd optimizer weight decay

  # only adam optimizer
  beta1: 0.937
  beta2: 0.999
  
onnx:
  input_blob_name: "input"
  output_blob_name: ["output1", "output2", "output3"]
  device: "cpu"
  save_dir: "./outputs"

detecting:
  id_to_class: {0: "head", 1: "person"}
  plot_colors: [[255, 125, 255],
                [125, 255, 125]]
  input_type: "image"  # image or movie
  image_list_file: "./image_list.txt" # only image
  movie_path: "./assets/demo1.mp4" # only movie
  model_file: "model.onnx"
  detect_threshold: 0.25
  iou_threshold: 0.45
  scale_list: [1.0]
  save_dir: "./outputs"
